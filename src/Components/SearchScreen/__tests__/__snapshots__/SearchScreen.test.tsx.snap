// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<SearchScreen /> renders 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <SearchScreen
    onSubmit={[Function]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <form
        onSubmit={[Function]}
      >
        <UITextField
          autoFocus={true}
          className="TextField"
          id="LocationInput"
          inputProps={
            Object {
              "aria-label": "Search Box",
            }
          }
          label="Location"
          onChange={[Function]}
          placeholder="Location"
          value=""
        />
        <UIButton
          onClick={[Function]}
          type="submit"
        >
          Search
        </UIButton>
      </form>,
      "className": "Container",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <UITextField
            autoFocus={true}
            className="TextField"
            id="LocationInput"
            inputProps={
              Object {
                "aria-label": "Search Box",
              }
            }
            label="Location"
            onChange={[Function]}
            placeholder="Location"
            value=""
          />,
          <UIButton
            onClick={[Function]}
            type="submit"
          >
            Search
          </UIButton>,
        ],
        "onSubmit": [Function],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "autoFocus": true,
            "className": "TextField",
            "id": "LocationInput",
            "inputProps": Object {
              "aria-label": "Search Box",
            },
            "label": "Location",
            "onChange": [Function],
            "placeholder": "Location",
            "value": "",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": "Search",
            "onClick": [Function],
            "type": "submit",
          },
          "ref": null,
          "rendered": "Search",
          "type": [Function],
        },
      ],
      "type": "form",
    },
    "type": "main",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <form
          onSubmit={[Function]}
        >
          <UITextField
            autoFocus={true}
            className="TextField"
            id="LocationInput"
            inputProps={
              Object {
                "aria-label": "Search Box",
              }
            }
            label="Location"
            onChange={[Function]}
            placeholder="Location"
            value=""
          />
          <UIButton
            onClick={[Function]}
            type="submit"
          >
            Search
          </UIButton>
        </form>,
        "className": "Container",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <UITextField
              autoFocus={true}
              className="TextField"
              id="LocationInput"
              inputProps={
                Object {
                  "aria-label": "Search Box",
                }
              }
              label="Location"
              onChange={[Function]}
              placeholder="Location"
              value=""
            />,
            <UIButton
              onClick={[Function]}
              type="submit"
            >
              Search
            </UIButton>,
          ],
          "onSubmit": [Function],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "autoFocus": true,
              "className": "TextField",
              "id": "LocationInput",
              "inputProps": Object {
                "aria-label": "Search Box",
              },
              "label": "Location",
              "onChange": [Function],
              "placeholder": "Location",
              "value": "",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "Search",
              "onClick": [Function],
              "type": "submit",
            },
            "ref": null,
            "rendered": "Search",
            "type": [Function],
          },
        ],
        "type": "form",
      },
      "type": "main",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
